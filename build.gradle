plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Flyway for database migrations
    implementation 'org.flywaydb:flyway-core'


    // Core Spring Batch
    implementation 'org.springframework.batch:spring-batch-core'
    implementation 'org.springframework.batch:spring-batch-infrastructure'
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // PostgreSQL JDBC driver
    implementation 'org.postgresql:postgresql:42.5.0'

    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Generate the correct JAR (Fat JAR with dependencies)
tasks.named('bootJar') {
    archiveBaseName.set('springbootbasic')
    archiveVersion.set('0.0.1-SNAPSHOT')
}

tasks.named('jar') {
    enabled = false // Disable plain JAR to avoid confusion
}

// Apply the external Docker Gradle script
apply from: 'config/docker.gradle'
